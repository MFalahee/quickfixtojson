{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MJFal\\\\Documents\\\\code\\\\quickfixtojson\\\\src\\\\act.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nconst axios = require('axios');\n\nconst {\n  SlowBuffer\n} = require('buffer');\n\nfunction changeAnimalKarma() {\n  axios.get(\"public\\StoreItems.json\").then(res => console.log(res)).catch(err => console.error(err));\n  fetch(\"./public/StoreItems.json\").then(res => {\n    console.log(res);\n    return res;\n  }).then(output => {\n    console.log('OUTPUT');\n    let storeItems = output;\n    let animalList = storeItems.items.filter(x => {\n      return x.category === \"Animals\";\n    });\n    let nameList = animalList.map(x => {\n      return x.defname;\n    });\n    fetch(\"/public/itemdata.json\").then(res => {\n      return res.json();\n    }).then(data => {\n      let items = data;\n      nameList.forEach(x => {\n        console.log(items[x]);\n        items[x].KarmaType = \"Bad\";\n      });\n      const potato = JSON.stringify(items);\n      fs.writeFile('./public/newItemList.json', potato, err => {\n        if (err) {\n          throw err;\n        }\n\n        console.log(\"JSON data is saved.\");\n      });\n    });\n  });\n}\n\nfunction Act(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: changeAnimalKarma(),\n    children: \"gogo SAVE!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 11\n  }, this);\n}\n\n_c = Act;\nexport default Act;\n\nvar _c;\n\n$RefreshReg$(_c, \"Act\");","map":{"version":3,"sources":["C:/Users/MJFal/Documents/code/quickfixtojson/src/act.js"],"names":["React","fs","require","axios","SlowBuffer","changeAnimalKarma","get","then","res","console","log","catch","err","error","fetch","output","storeItems","animalList","items","filter","x","category","nameList","map","defname","json","data","forEach","KarmaType","potato","JSON","stringify","writeFile","Act","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,OAAO,CAAC,QAAD,CAA9B;;AAEA,SAASG,iBAAT,GAA6B;AAC3BF,EAAAA,KAAK,CAACG,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CACGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADX,EAC6BG,KAD7B,CACmCC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAD1C;AAGAE,EAAAA,KAAK,CAAC,0BAAD,CAAL,CAAkCP,IAAlC,CAAuCC,GAAG,IAAI;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACL,GAHD,EAGGD,IAHH,CAGQQ,MAAM,IAAI;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAIM,UAAU,GAAGD,MAAjB;AACA,QAAIE,UAAU,GAAGD,UAAU,CAACE,KAAX,CAAiBC,MAAjB,CAAwBC,CAAC,IAAI;AAC5C,aAAOA,CAAC,CAACC,QAAF,KAAe,SAAtB;AAAkC,KADnB,CAAjB;AAEA,QAAIC,QAAQ,GAAGL,UAAU,CAACM,GAAX,CAAeH,CAAC,IAAI;AACjC,aAAOA,CAAC,CAACI,OAAT;AACH,KAFgB,CAAf;AAKJV,IAAAA,KAAK,CAAC,uBAAD,CAAL,CAA+BP,IAA/B,CAAoCC,GAAG,IAAI;AACzC,aAAOA,GAAG,CAACiB,IAAJ,EAAP;AACC,KAFH,EAEKlB,IAFL,CAEUmB,IAAI,IAAI;AACZ,UAAIR,KAAK,GAAGQ,IAAZ;AACJJ,MAAAA,QAAQ,CAACK,OAAT,CAAiBP,CAAC,IAAI;AAClBX,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACE,CAAD,CAAjB;AACAF,QAAAA,KAAK,CAACE,CAAD,CAAL,CAASQ,SAAT,GAAqB,KAArB;AACH,OAHD;AAKF,YAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeb,KAAf,CAAf;AACAjB,MAAAA,EAAE,CAAC+B,SAAH,CAAa,2BAAb,EAA0CH,MAA1C,EAAmDjB,GAAD,IAAS;AACzD,YAAIA,GAAJ,EAAS;AACP,gBAAMA,GAAN;AACD;;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,OALD;AAMC,KAhBD;AAiBD,GA9BC;AA+BD;;AAED,SAASuB,GAAT,CAAaC,KAAb,EAAoB;AAClB,sBAAQ;AAAQ,IAAA,OAAO,EAAE7B,iBAAiB,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAGD;;KAJQ4B,G;AAOT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nconst fs = require('fs');\r\nconst axios = require('axios');\r\nconst { SlowBuffer } = require('buffer');\r\n\r\nfunction changeAnimalKarma() {\r\n  axios.get(\"public\\StoreItems.json\").then(\r\n    (res) => console.log(res)).catch(err => console.error(err))\r\n    \r\n  fetch(\"./public/StoreItems.json\").then(res => {\r\n        console.log(res);\r\n        return res;\r\n  }).then(output => {\r\n      console.log('OUTPUT')\r\n      let storeItems = output;\r\n      let animalList = storeItems.items.filter(x => {\r\n        return x.category === \"Animals\"; }) \r\n      let nameList = animalList.map(x => {\r\n        return x.defname\r\n    })\r\n\r\n\r\n  fetch(\"/public/itemdata.json\").then(res => {\r\n    return res.json();\r\n    }).then(data => {\r\n        let items = data;\r\n    nameList.forEach(x => {\r\n        console.log(items[x])\r\n        items[x].KarmaType = \"Bad\";\r\n    })\r\n\r\n  const potato = JSON.stringify(items)\r\n  fs.writeFile('./public/newItemList.json', potato, (err) => {\r\n    if (err) {\r\n      throw err;\r\n    }\r\n    console.log(\"JSON data is saved.\");\r\n  });\r\n  })\r\n})\r\n} \r\n\r\nfunction Act(props) {\r\n  return (<button onClick={changeAnimalKarma()}>\r\n        gogo SAVE!\r\n        </button>)\r\n}\r\n  \r\n\r\nexport default Act;"]},"metadata":{},"sourceType":"module"}